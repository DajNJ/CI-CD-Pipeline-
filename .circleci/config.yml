version: 2.1

jobs:
  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin

      - run:
          name: Build Docker image
          command: |
            docker build -t $DOCKERHUB_USER/demo-app .

      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Run Container for Testing
          command: |
            docker run -d -p 3000:3000 --name test-app $DOCKERHUB_USER/demo-app
            sleep 10
            CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' test-app)
            curl --fail http://$CONTAINER_IP:3000/health || (docker logs test-app && exit 1)

      - run:
          name: Clean Up Container
          command: |
            docker stop test-app && docker rm test-app

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin

      - run:
          name: Push Docker Image
          command: |
            docker push $DOCKERHUB_USER/demo-app

      - add_ssh_keys:
          fingerprints:
            - "SHA256:gq6pk3gu/cf0oLTT2MaJY5rqZAF2IVEVZVpNEVy2WAI"  # Replace with actual fingerprint from CircleCI SSH Keys settings

      - run:
          name: Debug SSH Keys
          command: |
            ssh-add -l
            ls -la ~/.ssh/
            for key in ~/.ssh/id_rsa_*; do echo "Key: $key"; ssh-keygen -y -f "$key" 2>/dev/null || echo "Failed to read $key"; done

      - run:
          name: Deploy to EC2
          command: |
            ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ec2-user@$EC2_HOST '
              docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS" &&
              docker pull $DOCKERHUB_USER/demo-app &&
              docker stop demo-app || true &&
              docker rm demo-app || true &&
              docker run -d -p 80:3000 --name demo-app $DOCKERHUB_USER/demo-app
            '

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test

version: 2.1

jobs:
  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin

      - run:
          name: Build Docker image
          command: |
            docker build -t $DOCKERHUB_USER/demo-app .

      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Run Container for Testing
          command: |
            docker run -d -p 80:3000 --name test-app $DOCKERHUB_USER/demo-app
            sleep 10
            CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' test-app)
            curl --fail http://$CONTAINER_IP:3000/health || (docker logs test-app && exit 1)

      - run:
          name: Clean Up Container
          command: |
            docker stop test-app && docker rm test-app

  deploy:
    docker:
      - image: cimg/python:3.9
    steps:
      - attach_workspace:
          at: .

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install AWS CLI
          command: |
            pip install awscli

      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin

      - run:
          name: Push Docker Image
          command: |
            docker push $DOCKERHUB_USER/demo-app

      - run:
          name: Check SSM Agent Status
          command: |
            aws ssm describe-instance-information \
              --filters "Key=InstanceIds,Values=$EC2_INSTANCE_ID" \
              --region "$AWS_REGION" || echo "SSM not available"

      - run:
          name: Deploy to EC2
          command: |
            # Try SSM first, fallback to webhook
            if aws ssm send-command \
              --instance-ids "$EC2_INSTANCE_ID" \
              --document-name "AWS-RunShellScript" \
              --parameters 'commands=[
                "docker pull '$DOCKERHUB_USER'/demo-app",
                "docker stop demo-app || true",
                "docker rm demo-app || true",
                "docker run -d -p 80:3000 --name demo-app '$DOCKERHUB_USER'/demo-app"
              ]' \
              --region "$AWS_REGION"; then
              echo "Deployed via SSM"
            else
              echo "SSM failed, trying webhook..."
              curl -X POST "$DEPLOY_WEBHOOK_URL" \
                -H "Content-Type: application/json" \
                -d '{"image":"'$DOCKERHUB_USER'/demo-app","tag":"latest"}' || \
              echo "Both SSM and webhook failed. Manual deployment required."
            fi

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
